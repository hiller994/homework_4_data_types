from decimal import Decimal #более точный тип данных, который позволяет решить проблему с 0.300000....
#Модуль decimal в Python, работа с большими числами, способы округления чисел и альтернатива типу float.


# примеры работ с числами
a = 123 # некая переменная
a = a + 456
a = a /456
a = a * 465
a = a ** 3 #возведение в степень
a = (100 + 100) / 300 * 400

a = 0b1010001000101 #двоичные числа, в начала префикх 0b
a = 0o12345467 #восьмиричные
a = 0x1234567890abcdef #16ричтные

#Дробные числа (плавающая точка)
a = 0.5 #дробное число

a = 0.1 + 0.2
print (a)
# получится 0.30000000000000004, и это не будет равняться 0.3, поэтому

#assert a == 0.3

import math # математические уровнения
print(math.pi)

import random # генерация чисел
random.seed("клчевое слово, по которому будут генериться тестовые данных(ЛОГИКИ ТУТ НЕ ЗАВЯЗАНО, ПРОСТО КАК КОММЕНТАРИЙ???)") #фиксация тестовых данных, т.е. 1 раз сгенерили и потом эти данные неиземенны
print(random.randint(0, 100)) #рандомное int число
print(random.randint(0, 100))
print(random.randint(0, 100))

print(round(1.333333, 2)) # округляет до указанных знаков после запятой (2)